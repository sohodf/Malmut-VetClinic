//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Vet_Clinic.SendSMS22 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SMSWSSoap", Namespace="https://www.simplesms.co.il/webservice")]
    public partial class SMSWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BulkSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesDeliveryBySendIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBlackListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncomingMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncomingMessagesByCliOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlacklistOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SMSWS() {
            this.Url = global::Vet_Clinic.Properties.Settings.Default.Vet_Clinic_SendSMS22_SMSWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSmsCompletedEventHandler SendSmsCompleted;
        
        /// <remarks/>
        public event BulkSmsCompletedEventHandler BulkSmsCompleted;
        
        /// <remarks/>
        public event GetMessagesDeliveryBySendIdCompletedEventHandler GetMessagesDeliveryBySendIdCompleted;
        
        /// <remarks/>
        public event AddBlackListCompletedEventHandler AddBlackListCompleted;
        
        /// <remarks/>
        public event GetIncomingMessagesCompletedEventHandler GetIncomingMessagesCompleted;
        
        /// <remarks/>
        public event GetIncomingMessagesByCliCompletedEventHandler GetIncomingMessagesByCliCompleted;
        
        /// <remarks/>
        public event GetMessagesCreditCompletedEventHandler GetMessagesCreditCompleted;
        
        /// <remarks/>
        public event GetBlacklistCompletedEventHandler GetBlacklistCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.simplesms.co.il/webservice/SendSms", RequestNamespace="https://www.simplesms.co.il/webservice", ResponseNamespace="https://www.simplesms.co.il/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result SendSms(string UserName, string EncryptPassword, string Subscribers, string Message, string SenderName, int DeliveryDelayInMinutes, int ExpirationDelayInMinutes, string SendId) {
            object[] results = this.Invoke("SendSms", new object[] {
                        UserName,
                        EncryptPassword,
                        Subscribers,
                        Message,
                        SenderName,
                        DeliveryDelayInMinutes,
                        ExpirationDelayInMinutes,
                        SendId});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsAsync(string UserName, string EncryptPassword, string Subscribers, string Message, string SenderName, int DeliveryDelayInMinutes, int ExpirationDelayInMinutes, string SendId) {
            this.SendSmsAsync(UserName, EncryptPassword, Subscribers, Message, SenderName, DeliveryDelayInMinutes, ExpirationDelayInMinutes, SendId, null);
        }
        
        /// <remarks/>
        public void SendSmsAsync(string UserName, string EncryptPassword, string Subscribers, string Message, string SenderName, int DeliveryDelayInMinutes, int ExpirationDelayInMinutes, string SendId, object userState) {
            if ((this.SendSmsOperationCompleted == null)) {
                this.SendSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsOperationCompleted);
            }
            this.InvokeAsync("SendSms", new object[] {
                        UserName,
                        EncryptPassword,
                        Subscribers,
                        Message,
                        SenderName,
                        DeliveryDelayInMinutes,
                        ExpirationDelayInMinutes,
                        SendId}, this.SendSmsOperationCompleted, userState);
        }
        
        private void OnSendSmsOperationCompleted(object arg) {
            if ((this.SendSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsCompleted(this, new SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.simplesms.co.il/webservice/BulkSms", RequestNamespace="https://www.simplesms.co.il/webservice", ResponseNamespace="https://www.simplesms.co.il/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result BulkSms(string UserName, string EncryptPassword, string SenderName, int DeliveryDelayInMinutes, int ExpirationDelayInMinutes, string SendId, message[] messages) {
            object[] results = this.Invoke("BulkSms", new object[] {
                        UserName,
                        EncryptPassword,
                        SenderName,
                        DeliveryDelayInMinutes,
                        ExpirationDelayInMinutes,
                        SendId,
                        messages});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void BulkSmsAsync(string UserName, string EncryptPassword, string SenderName, int DeliveryDelayInMinutes, int ExpirationDelayInMinutes, string SendId, message[] messages) {
            this.BulkSmsAsync(UserName, EncryptPassword, SenderName, DeliveryDelayInMinutes, ExpirationDelayInMinutes, SendId, messages, null);
        }
        
        /// <remarks/>
        public void BulkSmsAsync(string UserName, string EncryptPassword, string SenderName, int DeliveryDelayInMinutes, int ExpirationDelayInMinutes, string SendId, message[] messages, object userState) {
            if ((this.BulkSmsOperationCompleted == null)) {
                this.BulkSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBulkSmsOperationCompleted);
            }
            this.InvokeAsync("BulkSms", new object[] {
                        UserName,
                        EncryptPassword,
                        SenderName,
                        DeliveryDelayInMinutes,
                        ExpirationDelayInMinutes,
                        SendId,
                        messages}, this.BulkSmsOperationCompleted, userState);
        }
        
        private void OnBulkSmsOperationCompleted(object arg) {
            if ((this.BulkSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BulkSmsCompleted(this, new BulkSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.simplesms.co.il/webservice/GetMessagesDeliveryBySendId", RequestNamespace="https://www.simplesms.co.il/webservice", ResponseNamespace="https://www.simplesms.co.il/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetMessagesDeliveryBySendId(string UserName, string EncryptPassword, string SendId) {
            object[] results = this.Invoke("GetMessagesDeliveryBySendId", new object[] {
                        UserName,
                        EncryptPassword,
                        SendId});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesDeliveryBySendIdAsync(string UserName, string EncryptPassword, string SendId) {
            this.GetMessagesDeliveryBySendIdAsync(UserName, EncryptPassword, SendId, null);
        }
        
        /// <remarks/>
        public void GetMessagesDeliveryBySendIdAsync(string UserName, string EncryptPassword, string SendId, object userState) {
            if ((this.GetMessagesDeliveryBySendIdOperationCompleted == null)) {
                this.GetMessagesDeliveryBySendIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesDeliveryBySendIdOperationCompleted);
            }
            this.InvokeAsync("GetMessagesDeliveryBySendId", new object[] {
                        UserName,
                        EncryptPassword,
                        SendId}, this.GetMessagesDeliveryBySendIdOperationCompleted, userState);
        }
        
        private void OnGetMessagesDeliveryBySendIdOperationCompleted(object arg) {
            if ((this.GetMessagesDeliveryBySendIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesDeliveryBySendIdCompleted(this, new GetMessagesDeliveryBySendIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.simplesms.co.il/webservice/AddBlackList", RequestNamespace="https://www.simplesms.co.il/webservice", ResponseNamespace="https://www.simplesms.co.il/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BlacklistResultStatus AddBlackList(string UserName, string EncryptPassword, string Subscribers) {
            object[] results = this.Invoke("AddBlackList", new object[] {
                        UserName,
                        EncryptPassword,
                        Subscribers});
            return ((BlacklistResultStatus)(results[0]));
        }
        
        /// <remarks/>
        public void AddBlackListAsync(string UserName, string EncryptPassword, string Subscribers) {
            this.AddBlackListAsync(UserName, EncryptPassword, Subscribers, null);
        }
        
        /// <remarks/>
        public void AddBlackListAsync(string UserName, string EncryptPassword, string Subscribers, object userState) {
            if ((this.AddBlackListOperationCompleted == null)) {
                this.AddBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBlackListOperationCompleted);
            }
            this.InvokeAsync("AddBlackList", new object[] {
                        UserName,
                        EncryptPassword,
                        Subscribers}, this.AddBlackListOperationCompleted, userState);
        }
        
        private void OnAddBlackListOperationCompleted(object arg) {
            if ((this.AddBlackListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBlackListCompleted(this, new AddBlackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.simplesms.co.il/webservice/GetIncomingMessages", RequestNamespace="https://www.simplesms.co.il/webservice", ResponseNamespace="https://www.simplesms.co.il/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IncomingResult GetIncomingMessages(string UserName, string EncryptPassword, string SendDate) {
            object[] results = this.Invoke("GetIncomingMessages", new object[] {
                        UserName,
                        EncryptPassword,
                        SendDate});
            return ((IncomingResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncomingMessagesAsync(string UserName, string EncryptPassword, string SendDate) {
            this.GetIncomingMessagesAsync(UserName, EncryptPassword, SendDate, null);
        }
        
        /// <remarks/>
        public void GetIncomingMessagesAsync(string UserName, string EncryptPassword, string SendDate, object userState) {
            if ((this.GetIncomingMessagesOperationCompleted == null)) {
                this.GetIncomingMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncomingMessagesOperationCompleted);
            }
            this.InvokeAsync("GetIncomingMessages", new object[] {
                        UserName,
                        EncryptPassword,
                        SendDate}, this.GetIncomingMessagesOperationCompleted, userState);
        }
        
        private void OnGetIncomingMessagesOperationCompleted(object arg) {
            if ((this.GetIncomingMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncomingMessagesCompleted(this, new GetIncomingMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.simplesms.co.il/webservice/GetIncomingMessagesByCli", RequestNamespace="https://www.simplesms.co.il/webservice", ResponseNamespace="https://www.simplesms.co.il/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IncomingResult GetIncomingMessagesByCli(string UserName, string EncryptPassword, string SendDate, string Subscriber) {
            object[] results = this.Invoke("GetIncomingMessagesByCli", new object[] {
                        UserName,
                        EncryptPassword,
                        SendDate,
                        Subscriber});
            return ((IncomingResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncomingMessagesByCliAsync(string UserName, string EncryptPassword, string SendDate, string Subscriber) {
            this.GetIncomingMessagesByCliAsync(UserName, EncryptPassword, SendDate, Subscriber, null);
        }
        
        /// <remarks/>
        public void GetIncomingMessagesByCliAsync(string UserName, string EncryptPassword, string SendDate, string Subscriber, object userState) {
            if ((this.GetIncomingMessagesByCliOperationCompleted == null)) {
                this.GetIncomingMessagesByCliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncomingMessagesByCliOperationCompleted);
            }
            this.InvokeAsync("GetIncomingMessagesByCli", new object[] {
                        UserName,
                        EncryptPassword,
                        SendDate,
                        Subscriber}, this.GetIncomingMessagesByCliOperationCompleted, userState);
        }
        
        private void OnGetIncomingMessagesByCliOperationCompleted(object arg) {
            if ((this.GetIncomingMessagesByCliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncomingMessagesByCliCompleted(this, new GetIncomingMessagesByCliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.simplesms.co.il/webservice/GetMessagesCredit", RequestNamespace="https://www.simplesms.co.il/webservice", ResponseNamespace="https://www.simplesms.co.il/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMessagesCredit(string UserName, string EncryptPassword) {
            object[] results = this.Invoke("GetMessagesCredit", new object[] {
                        UserName,
                        EncryptPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesCreditAsync(string UserName, string EncryptPassword) {
            this.GetMessagesCreditAsync(UserName, EncryptPassword, null);
        }
        
        /// <remarks/>
        public void GetMessagesCreditAsync(string UserName, string EncryptPassword, object userState) {
            if ((this.GetMessagesCreditOperationCompleted == null)) {
                this.GetMessagesCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesCreditOperationCompleted);
            }
            this.InvokeAsync("GetMessagesCredit", new object[] {
                        UserName,
                        EncryptPassword}, this.GetMessagesCreditOperationCompleted, userState);
        }
        
        private void OnGetMessagesCreditOperationCompleted(object arg) {
            if ((this.GetMessagesCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesCreditCompleted(this, new GetMessagesCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.simplesms.co.il/webservice/GetBlacklist", RequestNamespace="https://www.simplesms.co.il/webservice", ResponseNamespace="https://www.simplesms.co.il/webservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BlacklistResult GetBlacklist(string UserName, string EncryptPassword, int InLastXDays) {
            object[] results = this.Invoke("GetBlacklist", new object[] {
                        UserName,
                        EncryptPassword,
                        InLastXDays});
            return ((BlacklistResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlacklistAsync(string UserName, string EncryptPassword, int InLastXDays) {
            this.GetBlacklistAsync(UserName, EncryptPassword, InLastXDays, null);
        }
        
        /// <remarks/>
        public void GetBlacklistAsync(string UserName, string EncryptPassword, int InLastXDays, object userState) {
            if ((this.GetBlacklistOperationCompleted == null)) {
                this.GetBlacklistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlacklistOperationCompleted);
            }
            this.InvokeAsync("GetBlacklist", new object[] {
                        UserName,
                        EncryptPassword,
                        InLastXDays}, this.GetBlacklistOperationCompleted, userState);
        }
        
        private void OnGetBlacklistOperationCompleted(object arg) {
            if ((this.GetBlacklistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlacklistCompleted(this, new GetBlacklistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class Result {
        
        private string resultField;
        
        private Message[] messagesField;
        
        /// <remarks/>
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public Message[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class Message {
        
        private string idField;
        
        private string cliField;
        
        private string statusField;
        
        private string operatorField;
        
        private string textField;
        
        private System.DateTime createDateField;
        
        private string sendIdField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Cli {
            get {
                return this.cliField;
            }
            set {
                this.cliField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string SendId {
            get {
                return this.sendIdField;
            }
            set {
                this.sendIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class BlacklistItems {
        
        private string cliField;
        
        private System.DateTime insertDateField;
        
        /// <remarks/>
        public string Cli {
            get {
                return this.cliField;
            }
            set {
                this.cliField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsertDate {
            get {
                return this.insertDateField;
            }
            set {
                this.insertDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class BlacklistResult {
        
        private string resultField;
        
        private BlacklistItems[] itemsField;
        
        /// <remarks/>
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public BlacklistItems[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class IncomingMsg {
        
        private string fromField;
        
        private string toField;
        
        private string textMsgField;
        
        private System.DateTime tsField;
        
        /// <remarks/>
        public string From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string TextMsg {
            get {
                return this.textMsgField;
            }
            set {
                this.textMsgField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ts {
            get {
                return this.tsField;
            }
            set {
                this.tsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class IncomingResult {
        
        private string resultField;
        
        private IncomingMsg[] itemsField;
        
        /// <remarks/>
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public IncomingMsg[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class BlacklistStatus {
        
        private string cliField;
        
        private string statusField;
        
        private System.DateTime insertDateField;
        
        /// <remarks/>
        public string Cli {
            get {
                return this.cliField;
            }
            set {
                this.cliField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsertDate {
            get {
                return this.insertDateField;
            }
            set {
                this.insertDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class BlacklistResultStatus {
        
        private string resultField;
        
        private BlacklistStatus[] itemsField;
        
        /// <remarks/>
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public BlacklistStatus[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.simplesms.co.il/webservice")]
    public partial class message {
        
        private string msgIdField;
        
        private string cliField;
        
        private string textField;
        
        /// <remarks/>
        public string MsgId {
            get {
                return this.msgIdField;
            }
            set {
                this.msgIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cli {
            get {
                return this.cliField;
            }
            set {
                this.cliField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendSmsCompletedEventHandler(object sender, SendSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void BulkSmsCompletedEventHandler(object sender, BulkSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BulkSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BulkSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesDeliveryBySendIdCompletedEventHandler(object sender, GetMessagesDeliveryBySendIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesDeliveryBySendIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesDeliveryBySendIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBlackListCompletedEventHandler(object sender, AddBlackListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBlackListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBlackListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BlacklistResultStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BlacklistResultStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetIncomingMessagesCompletedEventHandler(object sender, GetIncomingMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncomingMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncomingMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IncomingResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IncomingResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetIncomingMessagesByCliCompletedEventHandler(object sender, GetIncomingMessagesByCliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncomingMessagesByCliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncomingMessagesByCliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IncomingResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IncomingResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesCreditCompletedEventHandler(object sender, GetMessagesCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetBlacklistCompletedEventHandler(object sender, GetBlacklistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlacklistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlacklistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BlacklistResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BlacklistResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591